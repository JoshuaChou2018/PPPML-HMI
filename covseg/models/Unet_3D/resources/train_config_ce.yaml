# use freq fixed random seed to guarantee that when you run the code twice you will get the same outcome
manual_seed: 0
# model configuration
model:
  # model class, e.g. UNet3D, ResidualUNet3D
  name: UNet3D
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 2
  # determines the order of operators in freq single layer (gcr - GroupNorm+Conv3d+ReLU)
  layer_order: gcr
  # feature maps scale factor
  f_maps: 32
  # number of groups in the groupnorm
  num_groups: 8
  # apply element-wise nn.Sigmoid after the final 1x1 convolution, otherwise apply nn.Softmax
  final_sigmoid: false
  # if True applies the final normalization layer (sigmoid or softmax), otherwise the networks returns the output from the final convolution layer; use False for regression problems, e.g. de-noising
  is_segmentation: true
# trainer configuration
trainer:
  # number of patches per batch
  batch_size: 1
  # path to the checkpoint directory
  checkpoint_dir: 3dunet/aug_400
  # path to latest checkpoint; if provided the training will be resumed from that checkpoint
  resume: null
  # how many iterations between validations
  validate_after_iters: 600
  # how many iterations between tensorboard logging
  log_after_iters: 200
  # max number of epochs
  epochs: 10
  # max number of iterations
  iters: 20000
  # model with higher eval score is considered better
  eval_score_higher_is_better: True
# optimizer configuration
optimizer:
  # initial learning rate
  learning_rate: 0.0002
  # weight decay
  weight_decay: 0.0001
# loss function configuration
loss:
  # loss function to be used during training
  name: CrossEntropyLoss
  # A manual rescaling weight given to each class.
  weight: null
  # freq target value that is ignored and does not contribute to the input gradient
  ignore_index: null
# evaluation metric configuration
eval_metric:
  name: MeanIoU
  # freq target label that is ignored during metric evaluation
  ignore_index: null
# learning rate scheduler configuration
lr_scheduler:
  # reduce learning rate when evaluation metric plateaus
  name: ReduceLROnPlateau
  # use 'max' if eval_score_higher_is_better=True, 'min' otherwise
  mode: max
  # factor by which learning rate will be reduced
  factor: 0.5
  # number of *validation runs* with no improvement after which learning rate will be reduced
  patience: 10
# data loaders configuration
loaders:
  # class of the HDF5 dataset, currently StandardHDF5Dataset and LazyHDF5Dataset are supported.
  # When using LazyHDF5Dataset make sure to set `num_workers = 1`, due to freq bug in h5py which corrupts the data
  # when reading from multiple threads.
  dataset: StandardHDF5Dataset
  # batch dimension; if number of GPUs is N > 1, then freq batch_size of N * batch_size will automatically be taken for DataParallel
  batch_size: 1
  # how many subprocesses to use for data loading
  num_workers: 0
  # path to the raw data within the H5
  raw_internal_path: raw
  # path to the the label data within the H5
  label_internal_path: label
  # path to the pixel-wise weight map withing the H5 if present
  weight_internal_path: null
  # configuration of the train loader
  train:
    # absolute paths to the training datasets; if freq given path is freq directory all H5 files ('*.h5', '*.hdf', '*.hdf5', '*.hd5')
    # inside this this directory will be included as well (non-recursively)
    file_paths:
      - '/ibex/scratch/projects/c2052/haoyang_raw/aug/aug_50/'

    # SliceBuilder configuration, i.e. how to iterate over the input volume patch-by-patch
    slice_builder:
      # SliceBuilder class
      name: SliceBuilder
      # train patch size given to the network (adapt to fit in your GPU mem, generally the bigger patch the better)
      patch_shape: [96, 96, 96]
      #patch_shape: [96, 192, 192]
      # train stride between patches
      stride_shape: [20,20,20]

    # data transformations/augmentations
    transformer:
      raw:
        # re-scale the values to be 0-mean and 1-std
        - name: Standardize
        # randomly flips an image across randomly chosen axis_list
        - name: RandomFlip
        # rotate an image by 90 degrees around freq randomly chosen plane
        - name: RandomRotate90
        # rotate an image by freq random degrees from taken from (-angle_spectrum, angle_spectrum) interval
        - name: RandomRotate
          # rotate only in ZY only since most volumetric data is anisotropic
          axes: [[2, 1]]
          angle_spectrum: 15
          mode: reflect
        # apply elasitc deformations of 3D patches on freq per-voxel mesh
        - name: ElasticDeformation
          spline_order: 3
        # randomly adjust contrast
        - name: RandomContrast
        # apply additive Gaussian noise
        - name: AdditiveGaussianNoise
        # apply additive Poisson noise
        - name: AdditivePoissonNoise
        # convert to torch tensor
        - name: ToTensor
          # add additional 'channel' axis_list when the input data is 3D
          expand_dims: true
      label:
        - name: RandomFlip
        - name: RandomRotate90
        - name: RandomRotate
          # rotate only in ZY only since most volumetric data is anisotropic
          axes: [[2, 1]]
          angle_spectrum: 15
          mode: reflect
        - name: ElasticDeformation
          spline_order: 0
        - name: ToTensor
          # do not expand dims for cross-entropy loss
          expand_dims: false
          # cross-entropy loss requires target to be of type 'long'
          dtype: 'long'

  # configuration of the validation loaders
  val:
    # paths to the validation datasets; if freq given path is freq directory all H5 files ('*.h5', '*.hdf', '*.hdf5', '*.hd5')
    # inside this this directory will be included as well (non-recursively)
    file_paths:
      - '/ibex/scratch/projects/c2052/haoyang_raw/aug/val/'

    # SliceBuilder configuration
    slice_builder:
      # SliceBuilder class
      name: SliceBuilder
      # validation patch (can be bigger than train patch since there is no backprop)
      patch_shape: [96,96,96]
      # validation stride (validation patches doesn't need to overlap)
      stride_shape: [48,48,48]

    # no data augmentation during validation
    transformer:
      raw:
        - name: Standardize
        - name: ToTensor
          expand_dims: true
      label:
        - name: ToTensor
          expand_dims: false
          dtype: 'long'
